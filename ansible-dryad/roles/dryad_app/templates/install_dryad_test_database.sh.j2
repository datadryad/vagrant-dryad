#!/bin/sh

# Requires .pgpass
export PGHOST={{ dryad.testdb.host }}
export PGPORT={{ dryad.testdb.port }}
export PGUSER={{ dryad.testdb.user }}
export PGDATABASE={{ dryad.testdb.name }}

DRYAD_CODE_DIR={{ dryad.repo_path }}

# Drop the dryad_test database
# dropdb/createdb require PGPASSWORD
export PGPASSWORD=`grep $PGUSER $HOME/.pgpass | awk -F ':' '{print $5}'`

dropdb $PGDATABASE
createdb $PGDATABASE

# Load database schema
psql < ${DRYAD_CODE_DIR}/dspace/etc/postgres/database_schema.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/postgres/database_create_doi_table.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/postgres/database_change_payment_system.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/postgres/database_terms_and_condition.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/collection-workflow-changes.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/atmire-versioning-changes.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/postgres/database_dryad_groups_collections.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/postgres/database_dryad_registries.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/postgres/dryad-rest-webapp.sql
psql < ${DRYAD_CODE_DIR}/dspace/etc/postgres/update-sequences.sql

# Copy test directory to local filesystem, outside of source repo, and owned by dryad user
DRYAD_TEST_DIR="{{ dryad.install_dir }}/test"

if [ -d $DRYAD_TEST_DIR ]; then
  rm -rf "${DRYAD_TEST_DIR}"
fi

cp -r "${DRYAD_CODE_DIR}/test" "${DRYAD_TEST_DIR}"

# Update the testing version of dspace.cfg with database credentials
# Ansible provisioning installs password into .pgpass, so fish it out of there

sed -i "s|db.password =.*|db.password = ${PGPASSWORD}|g" "${DRYAD_TEST_DIR}/config/dspace.cfg"
sed -i "s|db.username =.*|db.username = ${PGUSER}|g" "${DRYAD_TEST_DIR}/config/dspace.cfg"
sed -i "s|db.url =.*|db.url = jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}|g" "${DRYAD_TEST_DIR}/config/dspace.cfg"
sed -i "s|dspace.dir = .*|dspace.dir = ${DRYAD_TEST_DIR}|g" "${DRYAD_TEST_DIR}/config/dspace.cfg"
