---
- name: Clone Dryad repo
  git: repo=https://github.com/{{ dryad.github_user }}/dryad-repo.git
       dest={{ dryad.repo_path }}
       accept_hostkey=yes
  become: no

- name: Make m2 directory
  file: path={{ dryad.user_home }}/.m2 state=directory owner={{ dryad.user }} mode=0755

- name: Copy settings.xml for maven profile
  template: src=settings.xml.j2 dest="{{ dryad.user_home }}/.m2/settings.xml"
  become: no

- name: Add temporary newline file to approve tomcat creation
  template: src=newline_file.txt.j2 dest="{{ dryad.user_home }}/newline_file.txt"
  become: no

- name: Make private tomcat instance
  shell: tomcat7-instance-create {{ dryad.tomcat_home }} <{{ dryad.user_home }}/newline_file.txt creates={{ dryad.tomcat_home }}
  become: no

- name: Remove temporary newline file
  file: path={{ dryad.user_home }}/newline_file.txt state=absent
  become: no

- name: Update tomcat server.xml
  template: src=server.xml.j2 dest={{ dryad.tomcat_home }}/conf/server.xml backup=yes
  become: yes

- name: Update setenv.sh JDK_DIRS
  lineinfile: dest={{ dryad.tomcat_home }}/bin/setenv.sh regexp='^JDK_DIRS=' line='JDK_DIRS="/usr/lib/jvm/java-8-openjdk-amd64"'

- name: Update setenv.sh JAVA_OPTS
  lineinfile: dest={{ dryad.tomcat_home }}/bin/setenv.sh regexp=^'\s+JAVA_OPTS=' line='    JAVA_OPTS="-Xmx4096m -XX:+CMSClassUnloadingEnabled -XX:PermSize=512M -XX:MaxPermSize=512M"'

- name: Update setenv.sh JMX opts
  lineinfile: dest={{dryad.tomcat_home}}/bin/setenv.sh regexp=EOF line='JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=$JMXPORT -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=$JMXHOST"'

- name: Make global startup-debug.sh script
  command: cp /usr/share/tomcat7/bin/startup.sh /usr/share/tomcat7/bin/startup-debug.sh creates=/usr/share/tomcat7/bin/startup-debug.sh

- name: Update global startup-debug.sh script
  lineinfile: dest=/usr/share/tomcat7/bin/startup-debug.sh regexp='^exec ' line='exec "$PRGDIR"/"$EXECUTABLE" jpda start "$@"'

- name: Make dryad startup-debug.sh script
  shell: cp {{ dryad.tomcat_home }}/bin/startup.sh {{ dryad.tomcat_home }}/bin/startup-debug.sh creates={{ dryad.tomcat_home }}/bin/startup-debug.sh
  become: no

- name: Update startup-debug.sh script
  lineinfile: dest={{ dryad.tomcat_home }}/bin/startup-debug.sh regexp='/usr/share/tomcat7/bin/startup' line='/usr/share/tomcat7/bin/startup-debug.sh'

- name: Make bin directory
  file: path={{ dryad.user_home }}/bin state=directory owner={{ dryad.user }} mode=0755
  become: no

- name: install bash profile for path and database variables
  template: src=bash_profile.j2 dest="{{ dryad.user_home }}/.bash_profile" mode=0644
  become: no

- name: Install build script
  template: src=build_dryad.sh.j2 dest="{{ dryad.user_home }}/bin/build_dryad.sh" mode=0755
  become: no

- name: Install deploy script
  template: src=deploy_dryad.sh.j2 dest="{{ dryad.user_home }}/bin/deploy_dryad.sh" mode=0755
  become: no

- name: Install redeploy script
  template: src=redeploy_dryad.sh.j2 dest="{{ dryad.user_home }}/bin/redeploy_dryad.sh" mode=0755
  become: no

- name: Install tomcat start script
  template: src=tomcat_start.sh.j2 dest="{{ dryad.user_home }}/bin/tomcat_start.sh" mode=0755
  become: no

- name: Install tomcat stop script
  template: src=tomcat_stop.sh.j2 dest="{{ dryad.user_home }}/bin/tomcat_stop.sh" mode=0755
  become: no

- name: Install build indexes script
  template: src=build_indexes.sh.j2 dest="{{ dryad.user_home }}/bin/build_indexes.sh" mode=0755
  become: no

- name: Install script to update the theme without a full redeploy
  template: src=update_theme.sh.j2 dest="{{ dryad.user_home }}/bin/update_theme.sh" mode=0755
  become: no

- name: Install database script
  template: src=install_dryad_database.sh.j2 dest="{{ dryad.user_home }}/bin/install_dryad_database.sh" mode=0755

- name: Install database client script
  template: src=postgres_client.sh.j2 dest="{{ dryad.user_home }}/bin/postgres_client.sh" mode=0755
  become: no

- name: Copy carrot2-mini-3.1.0.jar for installation
  copy: src=carrot2-mini-3.1.0.jar dest=/tmp/

- name: Copy script to install missing poms
  copy: src=install_missing_poms.sh dest={{ dryad.user_home }}/bin/install_missing_poms.sh mode=0755
  become: no

- name: Install missing poms
  command: "{{ dryad.user_home }}/bin/install_missing_poms.sh chdir={{ dryad.repo_path }}/dspace/etc/discoverySnapshot"
  become: no

- name: Place dummy mailserver script
  copy: src=run_mailserver.sh dest="{{ dryad.user_home }}/bin/run_mailserver.sh" mode=0755
  become: no

- name: Install test database script
  template: src=install_dryad_test_database.sh.j2 dest="{{ dryad.user_home }}/bin/install_dryad_test_database.sh" mode=0755
  become: no

- name: Place test dryad script
  template: src=test_dryad.sh.j2 dest="{{ dryad.user_home }}/bin/test_dryad.sh" mode=0755
  become: no

- name: Make install directory
  file: path={{ dryad.install_dir }} state=directory owner={{ dryad.user }} mode=0755

- name: Make log directory
  file: path={{ dryad.install_dir }}/log state=directory owner={{ dryad.user }} mode=0755

- name: Place motd file
  template: src=motd.tail.j2 dest=/etc/motd.tail mode=0644 owner=root

- name: Regenerated motd for next login
  shell: run-parts /etc/update-motd.d/ > /var/run/motd

- name: Redirect codehaus domain
  shell: echo "23.235.47.209 repository.codehaus.org" >> /etc/hosts
  
- name: Clone dspace-services repo
  git: repo=https://github.com/datadryad/dspace-services.git
       dest="{{ dryad.user_home }}/dspace-services"
       version=spring-3.2.3
       accept_hostkey=yes
  become: no

- name: Make cached directory
  file: path={{ dryad.install_dir }}/cached state=directory owner={{ dryad.user }} mode=0755
